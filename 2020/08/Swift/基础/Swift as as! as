<!DOCTYPE html>
<html lang="zh-Hans">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222"><meta name="generator" content="Hexo 6.2.0">


  <link rel="apple-touch-icon" sizes="180x180" href="/vhuichen.ico">
  <link rel="icon" type="image/png" sizes="32x32" href="/vhuichen.ico">
  <link rel="icon" type="image/png" sizes="16x16" href="/vhuichen.ico">
  <link rel="mask-icon" href="/vhuichen.ico" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" integrity="sha256-AbA177XfpSnFEvgpYu1jMygiLabzPCJCRIBtR5jGc0k=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"vhuichen.github.io","root":"/","images":"/images","scheme":"Pisces","darkmode":false,"version":"8.13.0","exturl":false,"sidebar":{"position":"left","display":"display","padding":18,"offset":12},"copycode":{"enable":false,"style":null},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

    <meta name="description" content="目前公司项目中用到的 Swift 比较少，所以对 Swift 的理解也很局限。这里把一些放在笔记中的内容整理下分享出来。 as编译时检测,有两个意思1、指定文字表达类型2、upcast（向上转型，转换成其父类类型） 12345678910&#x2F;&#x2F;指定 1 的类型为 CGFloat 类型，既变量 num 为 CGFloat 类型let num &#x3D; 1 as CGFloat&#x2F;&#x2F;class Animal &amp;">
<meta property="og:type" content="article">
<meta property="og:title" content="Swift as as! as? 的理解">
<meta property="og:url" content="https://vhuichen.github.io/2020/08/Swift/%E5%9F%BA%E7%A1%80/Swift%20as%20as!%20as">
<meta property="og:site_name" content="vhuichen">
<meta property="og:description" content="目前公司项目中用到的 Swift 比较少，所以对 Swift 的理解也很局限。这里把一些放在笔记中的内容整理下分享出来。 as编译时检测,有两个意思1、指定文字表达类型2、upcast（向上转型，转换成其父类类型） 12345678910&#x2F;&#x2F;指定 1 的类型为 CGFloat 类型，既变量 num 为 CGFloat 类型let num &#x3D; 1 as CGFloat&#x2F;&#x2F;class Animal &amp;">
<meta property="og:locale">
<meta property="article:published_time" content="2020-08-24T16:00:00.000Z">
<meta property="article:modified_time" content="2021-07-03T17:19:08.003Z">
<meta property="article:author" content="vhuichen">
<meta property="article:tag" content="Swift">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://vhuichen.github.io/2020/08/Swift/%E5%9F%BA%E7%A1%80/Swift%20as%20as!%20as">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-Hans","comments":true,"permalink":"https://vhuichen.github.io/2020/08/Swift/%E5%9F%BA%E7%A1%80/Swift%20as%20as!%20as?%20%E7%9A%84%E7%90%86%E8%A7%A3/","path":"2020/08/Swift/基础/Swift as as! as? 的理解/","title":"Swift as as! as? 的理解"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>Swift as as! as? 的理解 | vhuichen</title>
  






  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">vhuichen</p>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">记录、分享</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section">Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section">Archives</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section">About</a></li>
  </ul>
</nav>




</div>
        
  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>

  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#as"><span class="nav-number">1.</span> <span class="nav-text">as</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#as-as"><span class="nav-number">2.</span> <span class="nav-text">as! as?</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%80%BB%E7%BB%93"><span class="nav-number">3.</span> <span class="nav-text">总结</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author site-overview-item animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="vhuichen"
      src="/images/vhuichen.jpg">
  <p class="site-author-name" itemprop="name">vhuichen</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap site-overview-item animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">78</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">11</span>
        <span class="site-state-item-name">categories</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">86</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>



        </div>
      </div>
    </div>
  </aside>
  <div class="sidebar-dimmer"></div>


    </header>

    
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-Hans">
    <link itemprop="mainEntityOfPage" href="https://vhuichen.github.io/2020/08/Swift/%E5%9F%BA%E7%A1%80/Swift%20as%20as!%20as?%20%E7%9A%84%E7%90%86%E8%A7%A3/">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/vhuichen.jpg">
      <meta itemprop="name" content="vhuichen">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="vhuichen">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="Swift as as! as? 的理解 | vhuichen">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          Swift as as! as? 的理解
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-08-25 00:00:00" itemprop="dateCreated datePublished" datetime="2020-08-25T00:00:00+08:00">2020-08-25</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2021-07-04 01:19:08" itemprop="dateModified" datetime="2021-07-04T01:19:08+08:00">2021-07-04</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">In</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/Swift/" itemprop="url" rel="index"><span itemprop="name">Swift</span></a>
        </span>
    </span>

  
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">
        <p>目前公司项目中用到的 Swift 比较少，所以对 Swift 的理解也很局限。这里把一些放在笔记中的内容整理下分享出来。</p>
<h2 id="as"><a href="#as" class="headerlink" title="as"></a>as</h2><p>编译时检测,有两个意思<br>1、指定文字表达类型<br>2、upcast（向上转型，转换成其父类类型）</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定 1 的类型为 CGFloat 类型，既变量 num 为 CGFloat 类型</span></span><br><span class="line"><span class="keyword">let</span> num <span class="operator">=</span> <span class="number">1</span> <span class="keyword">as</span> <span class="type">CGFloat</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>: <span class="title class_">Animal</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> dog <span class="operator">=</span> <span class="type">Dog</span>()</span><br><span class="line">dog <span class="keyword">as</span> <span class="type">Animal</span>  <span class="comment">//把 dog 转换为 Animal 类型，向上转型成功，编译器不会报错</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">let</span> dog: <span class="type">Animal</span> <span class="operator">=</span> <span class="type">Dog</span>()</span><br><span class="line">dog <span class="keyword">as</span> <span class="type">Dog</span> <span class="comment">//编译错误，此时的变量 dog 在编译时是 Animal 类型，只能向上转换，无法向下转换。</span></span><br></pre></td></tr></table></figure>

<h2 id="as-as"><a href="#as-as" class="headerlink" title="as! as?"></a>as! as?</h2><p>运行时检测，downcast（向下转型，转换成其子类类型）<br>只不过前者是强制解包，解包失败就崩溃<br>后者是可选类型   </p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面代码编译时均不会报错，因为 as! 和 as? 都是运行时检查的</span></span><br><span class="line"><span class="keyword">let</span> a: <span class="type">Animal</span> <span class="operator">=</span> <span class="type">Animal</span>()</span><br><span class="line">a <span class="keyword">as!</span> <span class="type">Dog</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">as!</span> <span class="type">Dog</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">as?</span> <span class="type">Dog</span></span><br></pre></td></tr></table></figure>

<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>: <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name <span class="operator">=</span> <span class="string">&quot;Spot&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> dog: <span class="type">Animal</span> <span class="operator">=</span> <span class="type">Dog</span>()</span><br><span class="line"><span class="keyword">let</span> dog1 <span class="operator">=</span> dog <span class="keyword">as?</span> <span class="type">Dog</span> <span class="comment">//可选值</span></span><br><span class="line"><span class="keyword">let</span> dog2 <span class="operator">=</span> dog <span class="keyword">as!</span> <span class="type">Dog</span> <span class="comment">//强制解压</span></span><br><span class="line"></span><br><span class="line">dog1<span class="operator">?</span>.name <span class="comment">//可选调用</span></span><br><span class="line">dog2.name <span class="comment">//直接调用</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1、<code>as</code> 在编译时检测，<code>as!</code> <code>as?</code> 在运行时检测<br>2、<code>as</code> 可以用来指定文字表达类型以及向上转型<br>3、<code>as!</code> <code>as?</code> 用来向下转型，<code>as?</code> 转型后为可选值，<code>as!</code> 相当于在这个可选值上强制解压（可能会导致崩溃）</p>

    </div>

    
    
    

    <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/Swift/" rel="tag"># Swift</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/2020/05/Swift/%E5%9F%BA%E7%A1%80/Swift%20%E4%BB%80%E4%B9%88%E6%98%AFABI%E7%A8%B3%E5%AE%9A%E3%80%81%E6%A8%A1%E5%9D%97%E7%A8%B3%E5%AE%9A/" rel="prev" title="Swift 什么是ABI稳定、模块稳定">
                  <i class="fa fa-chevron-left"></i> Swift 什么是ABI稳定、模块稳定
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/2021/03/iOS/MVC%E3%80%81MVP%E3%80%81MVVM%E6%A1%86%E6%9E%B6/" rel="next" title="MVC、MVP、MVVM框架">
                  MVC、MVP、MVVM框架 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">


<div class="copyright">
  &copy; 2015 – 
  <span itemprop="copyrightYear">2022</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">vhuichen</span>
</div>
  <div class="powered-by">Powered by <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/pisces/" rel="noopener" target="_blank">NexT.Pisces</a>
  </div>

    </div>
  </footer>

  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/next-boot.js"></script>

  





  





</body>
</html>
